import "./chunk-2PGE4AV6.js";
import {
  ShaderStore
} from "./chunk-FX6MN5HL.js";
import "./chunk-HKJ2B2AA.js";

// node_modules/@babylonjs/core/ShadersWGSL/layer.fragment.js
var name = "layerPixelShader";
var shader = `varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;uniform color: vec4f;
#include<helperFunctions>
#define CUSTOM_FRAGMENT_DEFINITIONS
@fragment
fn main(input: FragmentInputs)->FragmentOutputs {
#define CUSTOM_FRAGMENT_MAIN_BEGIN
var baseColor: vec4f=textureSample(textureSampler,textureSamplerSampler,input.vUV);
#ifdef LINEAR
baseColor=vec4f(toGammaSpace(baseColor.rgb),baseColor.a);
#endif
#ifdef ALPHATEST
if (baseColor.a<0.4)
discard;
#endif
fragmentOutputs.color=baseColor*uniforms.color;
#define CUSTOM_FRAGMENT_MAIN_END
}`;
ShaderStore.ShadersStoreWGSL[name] = shader;
var layerPixelShaderWGSL = { name, shader };
export {
  layerPixelShaderWGSL
};
//# sourceMappingURL=layer.fragment-AJI7CXXU.js.map
